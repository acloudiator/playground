$script = <<SCRIPT
mkdir $HOME/kernel-4.15
cd $HOME/kernel-4.15
wget http://kernel.ubuntu.com/~kernel-ppa/mainline/v4.15/linux-headers-4.15.0-041500_4.15.0-041500.201802011154_all.deb
wget http://kernel.ubuntu.com/~kernel-ppa/mainline/v4.15/linux-headers-4.15.0-041500-generic_4.15.0-041500.201802011154_amd64.deb
wget http://kernel.ubuntu.com/~kernel-ppa/mainline/v4.15/linux-image-4.15.0-041500-generic_4.15.0-041500.201802011154_amd64.deb
sudo dpkg -i *.deb
sudo apt-get update
sudo apt-get install -y apt-transport-https ca-certificates curl software-properties-common
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -
sudo add-apt-repository "deb https://download.docker.com/linux/$(. /etc/os-release; echo "$ID") $(lsb_release -cs) stable"
sudo apt-get update && sudo apt-get install -y docker-ce=$(apt-cache madison docker-ce | grep 17.03 | head -1 | awk '{print $3}')
sudo apt-get update && sudo apt-get install -y apt-transport-https
curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
sudo cat <<EOF >/etc/apt/sources.list.d/kubernetes.list
deb http://apt.kubernetes.io/ kubernetes-xenial main
EOF
sudo apt-get update
sudo apt-get install -y kubelet kubeadm kubectl
SCRIPT

Vagrant.configure("2") do |config|
  config.vm.provision "shell", inline: $script

  config.vm.define "masterother" do |masterother|
    masterother.vm.box = "ubuntu/xenial64"
    masterother.vm.provision :shell, inline: "hostname masterother.local && reboot"
  end

  config.vm.define "worker1other" do |worker1other|
    worker1other.vm.box = "ubuntu/xenial64"
    worker1other.vm.provision :shell, inline: "hostname worker1other.local && reboot"
  end

  config.vm.define "worker2other" do |worker2other|
    worker2other.vm.box = "ubuntu/xenial64"
    worker2other.vm.provision :shell, inline: "hostname worker2other.local && reboot"
  end

  config.vm.define "masteriovnet" do |masteriovnet|
    masteriovnet.vm.box = "ubuntu/xenial64"
    masteriovnet.vm.provision :shell, inline: "hostname masteriovnet.local && reboot"
  end

  config.vm.define "worker1iovnet" do |worker1iovnet|
    worker1iovnet.vm.box = "ubuntu/xenial64"
    worker1iovnet.vm.provision :shell, inline: "hostname worker1iovnet.local && reboot"
  end

  config.vm.define "worker2iovnet" do |worker2iovnet|
    worker2iovnet.vm.box = "ubuntu/xenial64"
    worker2iovnet.vm.provision :shell, inline: "hostname worker2iovnet.local && reboot"
  end

end
